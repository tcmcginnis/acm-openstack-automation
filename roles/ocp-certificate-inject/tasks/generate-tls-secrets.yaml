---
 #
- name: Check the presence of the git repo hub "{{ git_post_deployment_path }}"
  stat:
    path: "{{ git_post_deployment_path }}"
  register: gitrepo

- name: Generate a GIT based folder for the yaml output
  set_fact:
    yaml_directory: "{{ git_post_deployment_path }}/policies/post-deployment/clusters/{{ cluster_name }}/tls/"
  when: gitrepo.stat.exists

- name: Ensure the Machinesets folder exists and create one if not
  file:
    path: "{{ yaml_directory }}"
    state: directory
  when: gitrepo.stat.exists

- name: Set the yaml directory to the playbook directory if the GIT repo directory does not exist
  set_fact:
    yaml_directory: "{{ playbook_dir }}"
  when: not gitrepo.stat.exists

- name: Display location of deployment yaml"
  debug:
    msg: "Writing tls secrets yaml to '{{ yaml_directory }}'"

# Generate API cert yaml
- name: set variables for API cert
  set_fact:
    yaml_file: "{{ yaml_directory }}/{{ api_certs }}.yaml"
    template_file: "{{ api_certs }}.template"
    tls_crt: "{{ api_tls_pem_encoded }}"
    tls_key: "{{ api_tls_key_encoded }}"

- name: "Remove deployment yaml file from {{ yaml_directory }} if it already exist"
  ansible.builtin.file:
    path: "{{ yaml_file }}"
    state: absent

- name: "Process Jinja 2 template for all zones"
  template:
    src:  "{{ template_file }}"
    dest:  "{{ yaml_file }}"

# Generate Apps wildcard cert yaml
- name: set variables for APPS Wildcard cert
  set_fact:
    yaml_file: "{{ yaml_directory }}/{{ apps_certs }}.yaml"
    template_file: "{{ apps_certs }}.template"
    tls_crt: "{{ apps_tls_pem_encoded }}"
    tls_key: "{{ apps_tls_key_encoded }}"

- name: "Remove deployment yaml file from {{ yaml_directory }} if it already exist"
  ansible.builtin.file:
    path: "{{ yaml_file }}"
    state: absent

- name: "Process Jinja 2 template for all zones"
  template:
    src:  "{{ template_file }}"
    dest:  "{{ yaml_file }}"

