---
# tasks file for locating subnet information in OpenStack

 # === OpenStack Subnet processing query and processing section  ========================
 #

 # === Perform test OpenStack login to validate the datacenter / cloud / project name ===
 #
- name: Get subnet info from OpenStack
  os_subnets_info:
    auth:
      auth_url: "{{ osp_url }}"
      username: "{{ osp_username }}"
      password: "{{ osp_password }}"
      project_name: "{{ osp_project }}"
      project_domain_name: "{{ osp_projectdomain }}"
      user_domain_name: "{{ osp_userdomain }}"
    filters:
      tenant_id: "{{ osp_project_id }}"
    cacert: "{{ cacert }}"
  register: subnets

 # - name: Display OpenStack subnets
 #   debug:
 #    msg:
 #       - "{{ subnets.openstack_subnets }}"

- name: OpenStack Login / Query error
  debug:
    msg:
      - "!!! OpenStack Login / Query Error !!!"
      - ""
      - "Either the Datacenter/Cloud/Project combination is not valid"
      - "  or the login to this Openstack has failed."
      - ""
      - "osp_url: {{ osp_url }}"
      - ""
      - "Datacenter: {{ osp_datacenter }}  Cloud: {{ osp_cloud }}  Project: {{ osp_project }}"
      - ""
      - "Username: {{ osp_username }}"
      - ""
      - "cacert: {{ cacert }}"
  when: subnets.openstack_subnets == []

- name: "Initialize the net name in case one is not found"
  set_fact:
    net_name: "UNSET"

- name: "Locate valid subnet name containing {{ subnet_search_regex }}"
  set_fact:
    net_name: "{{ item }}"
  when: "'{{subnet_search_regex|upper}}' in item|upper"
  with_items:
          - "{{ subnets.openstack_subnets | map(attribute='name') | list }}"

- name: Fail if Openstack query returns no results
  fail:
    msg:
      - No subnets found containing {{ subnet_search_regex }} in project {{ osp_project }}"
  when: net_name == "UNSET"

- name: Get subnet info from OpenStack
  os_subnets_info:
    auth:
      auth_url: "{{ osp_url }}"
      username: "{{ osp_username }}"
      password: "{{ osp_password }}"
      project_name: "{{ osp_project }}"
      project_domain_name: YourOpenStackProjectDomain Goes Here
      user_domain_name: YourOpenStackProjectDomain Goes Here
    name: "{{ net_name }}"
    filters:
      tenant_id: "{{ osp_project_id }}"
    cacert: "{{ cacert }}"
  register: subnets

- name: Fail if Openstack query returns no results
  fail:
    msg:
      - "No subnets found containing {{ subnet_search_regex }} in project {{ osp_project }}"
  when: subnets.openstack_subnets == []


 # === Process the results from the OpenStack subnet query  =============================
 #
- name: Set Subnet variables from OpenStack query
  set_fact:
    subnet_id: "{{ subnets | json_query('openstack_subnets[0].id') }}"
    subnet_name: "{{ subnets | json_query('openstack_subnets[0].name') }}"
    cidr: "{{ subnets | json_query('openstack_subnets[0].cidr') }}"
    gateway_ip: "{{ subnets | json_query('openstack_subnets[0].gateway_ip') }}"

